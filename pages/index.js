import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useState, useEffect } from 'react';
import { NFC, Ndef } from '@awesome-cordova-plugins/nfc';
import { IonButton, IonHeader, IonInput, IonText } from '@ionic/react';
import { Capacitor } from '@capacitor/core';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

	const [tagData, setTagData] = useState(null);
	const [test, setTest] = useState("initial");
	const [scanning, setScanning] = useState(false);
	const [writing, setWriting] = useState(false);
	const [text, setText] = useState("")
	// const nfc = new NFC();
	// const ndef = new Ndef();

	useEffect(() => {
		const plat = Capacitor.getPlatform()
		if (plat == 'web')
			return
		if (plat == 'android') {
			let readerMode;
			if (scanning) {
				// Enable NFC reader mode when scanning is true
				let flags = NFC.FLAG_READER_NFC_A | NFC.FLAG_READER_NFC_V;
				readerMode = NFC.readerMode(flags).subscribe(
					tag => setTagData(tag),
					err => console.log('Error reading tag', err)
				);
			}
			// Clean up the subscription when the component unmounts or scanning is turned off
			return () => {
				if (readerMode) {
					readerMode.unsubscribe();
				}
			};
		}
		else {

			NFC.scanNdef().then(
				tag => setTagData(tag),
				err => console.log('Error reading tag', err));
		}

	}, [scanning]);

	useEffect(() => {
		if (writing) {
			
			console.log(text)
			NFC.addNdefListener(e => {
				setTest(prev => prev = "baka") 
				console.log(e.tag);

				console.log(text)
				let message = [
					Ndef.textRecord(text),
					// Ndef.uriRecord("http://github.com/chariotsolutions/phonegap-nfc")
				];

				NFC.write(
					message,
					success => { document.getElementById("lol").classList.add("hidden")
					setTest(prev => prev = "success") 
				},
					error => { document.getElementById("lol").value = error 
					setTest(prev => prev = "error") }
				)
			}, setTest(prev => prev = "success") ,  setTest(prev => prev = "error") );

		}

	}, [writing]);

	useEffect(()=>{
		if(test){

		}
	},[test])

	const handleScanButton = () => {
		setScanning(true);
	};

	const handleStopButton = () => {
		setScanning(false);
		setTagData(null);
	};

	return (
		<>
			<h1 className='' id="lol">{test}</h1>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className='flex flex-col justify-center items-center h-screen text-center'>
				{scanning ? (
					<IonButton onClick={handleStopButton}>Stop Scanning</IonButton>
				) : (
					<IonButton onClick={handleScanButton}>Start Scanning</IonButton>
				)}

				{tagData ?
					<div>
						<p>Tag: {JSON.stringify(tagData)}</p>
						<p>Tag ID: {tagData.id}</p>
						<p>Tag Type: {tagData.type}</p>
					</div>
					:
					<h1>Scan an NFC tag to see the data.</h1>
				}
				<IonInput
					value={text}
					placeholder="Enter Input"
					onIonChange={(e) => setText(e.detail.value)}
					clearInput
				></IonInput>
				{writing ? (
					<IonButton onClick={() => setWriting(false)}>Stop Writing</IonButton>
				) : (
					<IonButton onClick={() => { text && setWriting(true) }}>Start Writing</IonButton>
				)}


			</div>
		</>
	)
}
