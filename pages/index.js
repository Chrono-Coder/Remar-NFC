import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useState, useEffect } from 'react';
import { NFC, Ndef, NFCOriginal } from '@awesome-cordova-plugins/nfc';
import { IonButton, IonFabButton, IonHeader, IonInput, IonText, IonList } from '@ionic/react';
import { Capacitor } from '@capacitor/core';
import { TextHelper } from '@awesome-cordova-plugins/nfc';
import ReadNfc from '../components/ReadNfc'
import WriteNfc from '../components/WriteNfc'
import Keys from '../components/Keys'
import styles from '../styles/Home.module.css'
import { writeDataToPreferences, readDataFromPreferences, deleteAllDataFromPreferences, deleteDataFromPreferences, readAllDataFromPreferences } from "../util/storage.service"
// import styles from '../styles/global.css'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

	const [popup, setPopup] = useState(false);
	const [inputValue, setInputValue] = useState('');
	const [inputKey, setInputKey] = useState('');
	const [isInputInvalid, setIsInputInvalid] = useState(false);
	const [keys, setKeys] = useState({ keys: [], values: [] });
	const [keyPopup, setKeyPopup] = useState(false);
	const [status, setStatus] = useState('')

	useEffect(() => {
		const fetchData = async () => {
			const data = await readAllDataFromPreferences();
			setKeys(data);
		};
		fetchData();
	}, []);

	const handleAddKey = async () => {

		if (inputValue.length < 12 || inputKey <= 0)
			setIsInputInvalid(true);
		else {
			setIsInputInvalid(false);
			await writeDataToPreferences(inputKey, inputValue)
			const data = await readAllDataFromPreferences();
			setKeys(data);
			setPopup(false);
			setInputKey('');
			setInputValue('');
		}
	}

	const handleDeleteAll = async () => {
		await deleteAllDataFromPreferences();
		setKeys({ keys: [], values: [] });
	}

	const handleCancel = () => {
		setPopup(false);
		setIsInputInvalid(false);
		setInputKey('');
		setInputValue('');
	}
	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="stylesheet" href="../styles/global.css" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			
			{keyPopup && <div className='absolute h-screen w-screen opacity-50 bg-black z-10'></div>}
            {keyPopup && <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 flex flex-col
                bg-white rounded-lg shadow-md h-1/6 w-1/2 justify-center z-20 items-center'>
                    <div className='flex flex-col w-full px-4 justify-around h-full'>
                        <h2 className='text-purple-dark text-center'>{status}</h2>
						<div className='flex justify-center w-full'>
                        	<IonButton className='w-full' color="graylight" onClick={()=>setKeyPopup(false)}>Cancel</IonButton>
                        </div>
					</div>
                </div>
                }
			{popup && <div className='absolute h-screen w-screen opacity-50 bg-black z-10'></div>}
			{popup && <div className='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 flex flex-col bg-white rounded-lg shadow-md h-1/3 w-2/3 justify-center z-20 items-center'>
			<div className='flex flex-col w-full h-full justify-between py-2 px-2'>
				<div className='flex flex-col pt-3 gap-1 w-full px-4'>
					<h2 className='text-purple-dark'>Name:</h2>
					<IonInput placeholder='Home' maxlength='32'
						value={inputKey} onIonChange={(e) => setInputKey(e.target.value)}></IonInput>
					<h2 className='text-purple-dark mt-3'>Code:</h2>
					<IonInput placeholder='123456789ABC' maxlength='12'
						value={inputValue} onIonChange={(e) => setInputValue(e.target.value)}></IonInput>
					{isInputInvalid && <h2 className='text-red-500'>Error, below 12 digits</h2>}
				</div>
				<div className='flex flex-row w-full h-14 px-4'>
					<IonButton className='h-10 w-1/2 mx-2' color="graylight" onClick={handleCancel}>Cancel</IonButton>
					<IonButton className='h-10 w-1/2 mx-2' color="dark-purple" onClick={handleAddKey}>Add</IonButton>
				</div>
			</div>
			</div>
			}

			<div className='flex flex-col items-center h-screen w-screen'>
				<h1 className='text-purple-dark text-3xl font-bold py-3' id="lol">RemarNFC</h1>
				<div className='border w-screen items-center justify-center overflow-auto h-screen'>
					<IonList>
						{keys.values.map((item) => (

							<Keys keyPopup={keyPopup} setKeyPopup={setKeyPopup} status={status} setStatus={setStatus} obj={{ key: item.key, value: item.value }}></Keys>
						))}
					</IonList>
				</div>
				<div className='grid grid-cols-2 h-[10%] items-center w-screen'>
					<IonButton className='text-[18px] w-full h-full rounded-none font-semibold' color="graylight" onClick={handleDeleteAll}
					> <span class="mb-0">Delete All</span></IonButton>
					<IonButton className='text-[18px] w-full h-full rounded-none font-semibold' color="dark-purple"
						onClick={
							() => { setPopup(true) }}
					>  <span class="mb-0">Add Key</span>
					</IonButton>
				</div>
			</div>

		</>
	)
}

//Replace NfcPlugin inside android studio with NfcPluginReplacement.txt ==> https://github.com/escully27/phonegap-nfc-android-12/blob/master/src/android/src/com/chariotsolutions/nfc/plugin/NfcPlugin.java
